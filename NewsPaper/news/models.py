from django.db import models


# Модель Author
# Имеет следующие поля:
# -cвязь «один к одному» с встроенной моделью пользователей User;
# -рейтинг пользователя.
class Author(models.Model):

    # Метод update_rating() модели Author, который обновляет рейтинг пользователя, переданный в аргумент этого метода.
    # Он состоит из следующего:
    # -суммарный рейтинг каждой статьи автора умножается на 3;
    # -суммарный рейтинг всех комментариев автора;
    # -суммарный рейтинг всех комментариев к статьям автора.
    def update_rating(self):
        pass


# Модель Category
# Категории новостей/статей — темы, которые они отражают (спорт, политика, образование и т. д.).
# Имеет единственное поле: название категории.
# Поле должно быть уникальным (в определении поля необходимо написать параметр unique = True).
class Category(models.Model):
    pass


# Модель Post
# Эта модель должна содержать в себе статьи и новости, которые создают пользователи. Каждый объект может иметь одну или несколько категорий.
# Соответственно, модель должна включать следующие поля:
# -связь «один ко многим» с моделью Author;
# -поле с выбором — «статья» или «новость»;
# -автоматически добавляемая дата и время создания;
# -связь «многие ко многим» с моделью Category (с дополнительной моделью PostCategory);
# -заголовок статьи/новости;
# -текст статьи/новости;
# -рейтинг статьи/новости.
class Post(models.Model):
    pass

    # Метод preview() модели Post, который возвращает начало статьи (предварительный просмотр) длиной 124 символа и добавляет многоточие в конце.

    # - like() ,
    # - dislike(),
    def like(self):
        pass

    def dislike(self):
        pass


# Модель PostCategory
# Промежуточная модель для связи «многие ко многим»:
#
# связь «один ко многим» с моделью Post;
# связь «один ко многим» с моделью Category.
class PostCategory(models.Model):
    pass


# Модель Comment
# Под каждой новостью/статьёй можно оставлять комментарии, поэтому необходимо организовать их способ хранения тоже.
# Модель будет иметь следующие поля:
#
# связь «один ко многим» с моделью Post;
# связь «один ко многим» со встроенной моделью User (комментарии может оставить любой пользователь, необязательно автор);
# текст комментария;
# дата и время создания комментария;
# рейтинг комментария.
class Comment(models.Model):
    pass

    # - like() ,
    # - dislike(),
    def like(self):
        pass

    def dislike(self):
        pass
